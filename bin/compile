#! /bin/bash

BUILD_DIR=$1
CACHE_DIR=$2
PWD=`pwd`

JRE_ARCHIVE=jre-8u131-linux-x64.tar.gz
JRE_URL=http://javadl.oracle.com/webapps/download/AutoDL?BundleId=220305_d54c1d3a095b4ff2b6607d096fa80163


ENV_FILE=$BUILD_DIR/bin/setenv
LOG_CFG=$BUILD_DIR/etc/org.ops4j.pax.logging.cfg

## Include jre
echo "-----> Installing JRE"
if [ -e $CACHE_DIR/$JRE_ARCHIVE ]; then
  echo "       JRE archive is cached"
else 
  echo "       JRE in expected version not detected"
  echo "       Purging cached JREs"
  rm -rf $CACHE_DIR/jre*
  echo "       Downloading JRE"	
  wget -P $CACHE_DIR -q --no-cookies --no-check-certificate --header "Cookie: gpw_e24=http%3A%2F%2Fwww.oracle.com%2F; oraclelicense=accept-securebackup-cookie" -O $CACHE_DIR/$JRE_ARCHIVE $JRE_URL 
fi
tar xf $CACHE_DIR/$JRE_ARCHIVE -C $CACHE_DIR
mv $CACHE_DIR/jre1.* $BUILD_DIR/jre

echo "-----> Configure app"
## Set JAVA_HOME in bin/setenv
echo "       Set JAVA_HOME"
sed 's/^#\sexport\sJAVA_HOME.*/export JAVA_HOME=\/home\/vcap\/app\/jre/' -i.bak $ENV_FILE 

## Enable stdout logger. We do not want that since application logs can break loggregator buffer
echo "       Enable console logger"
sed -i.bak 's/^\(log4j\.rootLogger=[A-Z]\{4,5\},\)\(.*\)/\1 stdout,\2/' $LOG_CFG 
	
cd $BUILD_DIR 
if [[ -n $BUILDPACK_SCRIPT ]]; then 
	echo "       Run custom script"
	echo "$BUILDPACK_SCRIPT" | while read -r line; do
		echo "       > $line"
		eval $line
		if [[ $? -ne 0 ]]; then 
			echo "      error"
			exit 1
		fi
	done
fi
cd $PWD

exit 0
